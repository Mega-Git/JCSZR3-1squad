// <auto-generated />
using Crypto.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crypto.Web.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    [Migration("20210906200441_CurrencyDataBase")]
    partial class CurrencyDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyModel", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyPricesModel", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimestampId")
                        .HasColumnType("int");

                    b.HasKey("PriceId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("TimestampId")
                        .IsUnique();

                    b.ToTable("Price");
                });

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyTimestampsModel", b =>
                {
                    b.Property<int>("TimestampId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TimestampId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Timestamp");
                });

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyPricesModel", b =>
                {
                    b.HasOne("Crypto.Web.Models.NewCurrencyModel", "Currency")
                        .WithMany("Prices")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crypto.Web.Models.NewCurrencyTimestampsModel", "Timestamp")
                        .WithOne("Price")
                        .HasForeignKey("Crypto.Web.Models.NewCurrencyPricesModel", "TimestampId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Timestamp");
                });

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyTimestampsModel", b =>
                {
                    b.HasOne("Crypto.Web.Models.NewCurrencyModel", "Currency")
                        .WithMany("Timestamps")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyModel", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Timestamps");
                });

            modelBuilder.Entity("Crypto.Web.Models.NewCurrencyTimestampsModel", b =>
                {
                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
